#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Dungeon Mini –∏–≥—Ä—ã
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python3 server.py –∏–ª–∏ python server.py
"""

import http.server
import socketserver
import webbrowser
import threading
import time
import socket
import os

PORT = 8000

class MyHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):
    """–ö–∞—Å—Ç–æ–º–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    
    def end_headers(self):
        # –î–æ–±–∞–≤–ª—è–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type')
        super().end_headers()
    
    def log_message(self, format, *args):
        """–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –±–æ–ª–µ–µ –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞"""
        print(f"üåê {self.address_string()} - {format % args}")

def find_free_port(start_port=PORT):
    """–ù–∞—Ö–æ–¥–∏–º —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ—Ä—Ç –Ω–∞—á–∏–Ω–∞—è —Å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ"""
    for port in range(start_port, start_port + 100):
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            if s.connect_ex(('localhost', port)) != 0:
                return port
    return PORT

def open_browser(url, delay=1):
    """–û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π"""
    time.sleep(delay)
    webbrowser.open(url)

if __name__ == "__main__":
    # –ù–∞—Ö–æ–¥–∏–º —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ—Ä—Ç
    port = find_free_port()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    Handler = MyHTTPRequestHandler
    httpd = socketserver.TCPServer(("", port), Handler)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ—á–Ω—ã–π URL
    url = f"http://localhost:{port}"
    
    print("üè∞" + "=" * 50 + "üè∞")
    print("üéÆ   DUNGEON MINI - –í–µ–±-–≤–µ—Ä—Å–∏—è –∏–≥—Ä—ã")
    print("üè∞" + "=" * 50 + "üè∞")
    print()
    print(f"üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    print(f"üåê URL: {url}")
    print(f"üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    print()
    print("üìñ –ö–æ–º–∞–Ω–¥—ã —Å–µ—Ä–≤–µ—Ä–∞:")
    print("   Ctrl+C - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä")
    print("   –ù–∞–∂–º–∏—Ç–µ Enter –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ - –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä –∑–∞–Ω–æ–≤–æ")
    print()
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    browser_thread = threading.Thread(target=open_browser, args=(url,))
    browser_thread.daemon = True
    browser_thread.start()
    
    try:
        httpd.serve_forever()
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä...")
        httpd.shutdown()
        print("üëã –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
