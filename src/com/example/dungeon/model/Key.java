package com.example.dungeon.model;

import java.util.Map;

public class Key extends Item {
    public Key(String name) {
        super(name);
    }

    @Override
    public void apply(GameState ctx) {
        Room current = ctx.getCurrent();
        Player player = ctx.getPlayer();
        Map<String, Room> world = ctx.getWorld();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∑–∞–ø–µ—Ä—Ç—ã–µ –¥–≤–µ—Ä–∏
        boolean doorOpened = false;

        // –ü–µ—â–µ—Ä–∞ -> –°–æ–∫—Ä–æ–≤–∏—â–Ω–∏—Ü–∞
        if (current.getName().equals("–ü–µ—â–µ—Ä–∞")) {
            Room treasure = world.get("–°–æ–∫—Ä–æ–≤–∏—â–Ω–∏—Ü–∞");
            if (treasure != null && !current.getNeighbors().containsValue(treasure)) {
                current.getNeighbors().put("north", treasure);
                System.out.println("üîë –í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ " + getName() + " –∏ –æ—Ç–∫—Ä—ã–ª–∏ –¥–≤–µ—Ä—å –≤ —Å–æ–∫—Ä–æ–≤–∏—â–Ω–∏—Ü—É!");
                doorOpened = true;
            }
        }

        // –°–æ–∫—Ä–æ–≤–∏—â–Ω–∏—Ü–∞ -> –ü–µ—â–µ—Ä–∞
        else if (current.getName().equals("–°–æ–∫—Ä–æ–≤–∏—â–Ω–∏—Ü–∞")) {
            Room cave = world.get("–ü–µ—â–µ—Ä–∞");
            if (cave != null && !current.getNeighbors().containsValue(cave)) {
                current.getNeighbors().put("south", cave);
                System.out.println("üîë –í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ " + getName() + " –∏ –æ—Ç–∫—Ä—ã–ª–∏ –¥–≤–µ—Ä—å –æ–±—Ä–∞—Ç–Ω–æ –≤ –ø–µ—â–µ—Ä—É!");
                doorOpened = true;
            }
        }

        if (doorOpened) {
            player.getInventory().remove(this);
            ctx.addScore(20);
        } else {
            System.out.println("–ö–ª—é—á –∑–≤–µ–Ω–∏—Ç. –í–æ–∑–º–æ–∂–Ω–æ, –≥–¥–µ-—Ç–æ –µ—Å—Ç—å –¥–≤–µ—Ä—å...");
        }
    }
}
